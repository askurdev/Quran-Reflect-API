openapi: 3.0.0
info:
  version: 1.0.0
  title: quranic_reflect
  description: The API for the Quran_Reflect Application project
  contact:
    name: quranic-reflect
    url: https://quranicreflect.com
    email: quranreflect@quranreflect.com
servers:
  - description: Dev
    url: 'http://localhost:4000/api/v1'
    
  
    
tags:
  - name: Developers
    description: Operations available to regular developers
  - name: quranic_reflect
    description: users Endpoints (Admin only)
paths:
  /auth/signup:
    post:
      description: create a new account
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: quranic_reflects
                email:
                  type: string
                  example: quranic@quranic_reflects.com
                password:
                  type: string
                  example: 123456
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: Signup Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: Signup successful
                  data:
                    type: object
                    properties:
                      access_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/auth/signup'
                      signin:
                        type: string
                        example: '/auth/signin'
        "400":
          $ref: '#/components/responses/400'
        '500':
          $ref: "#/components/responses/500"
  /auth/signin:
    post:
      description: Login to your account
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: quranic@quranicreflects.com
                password:
                  type: string
                  example: 123456
              required:
                - email
                - password
      responses:
        "201":
          description: Signin successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: Signin successful
                  data:
                    type: object
                    properties:
                      access_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/auth/signin'
        "400":
          $ref: '#/components/responses/400'
        '500':
          $ref: "#/components/responses/500"
  /searching:
    get:
      tags: [search]
      operationId: querySearch
      parameters: 
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: This is a simple search function.
  /send:
    post:
      tags: 
        - Email Service api
        - admin Developers
      summary : send email with attachments
      description: send an email to support
      responses:
        '201':
          description: successfully send email
        '400':
          description: 'invalid input,object invalid'
      requestBody:
        content:
          '/application':
              schema:
                $ref: "#/components/schemas/mailSchema"
        description : Email to send 
  '/quranic_reflects':
    get:
      tags: [quranic_reflects]
      description: Retrive all published Quranic_reflect
      parameters: 
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of quranic_reflects
          content:
            'application/json':
             schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                   allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int32
                            example : 1
                          title:
                            type: string
                            example: first quranic_reflects
                          cover:
                            type: string
                            format: url
                            example : https://s3.aws.com/quranic_reflect/124.jpg
                          author:
                            $ref: "#/components/schemas/AuthorDTO"
                          link:
                            type: string
                            format: url
                            example: '/quranic_reflects/1'
                        required: [id, title, author]
                      - $ref: "#/components/schemas/Timestamp"
                pagination:
                  $ref: '#/components/schemas/Pagination'
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: url
                      example : '/quranic_reflects?page=2&limit=10'
                    next:
                      type: string
                      format: url
                      example : '/quranic_reflects?page=3&limit=10'
                    prev:
                      type: string
                      format: url
                      example : '/quranic_reflects?page=1&limit=10'
        '400':
          $ref: "#/components/responses/400"
        '500':
          $ref: "#/components/responses/500"
    post:
      operationId: createPost
      security: 
        - bearerAuth: []
      tags: [quranic_reflects]
      description: Create a new quranic_reflects
      requestBody:
        description: To Create a new quranic_reflects user must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: body of the first quranic_reflects
                body:
                  type: string
                  format: text
                  example: first quranic_reflects
                cover:
                  type: string
                  format: url
                  example: https://s3.aws.quranic_reflects.com/23nds
                status:
                  type: string
                  enum: [draft, published]
                  example: draft
              required: [title, body]
      responses:
          '201':
            description: Successfully Created a new quranic_reflect
            content:
              "application.json":
                schema:
                  $ref: '#/components/schemas/quranic_reflectsCreateDTO'
          '400':
            $ref: '#/components/responses/400'
          '401':
            $ref: '#/components/responses/401'
          '500':
            $ref : '#/components/responses/500'
  '/quranic_reflects/{id}':
    get:
      tags: [quranic_reflects]
      description: Fetch a single quranic_reflects
      parameters: 
        - $ref: "#/components/parameters/idPathParam"
        - in: query
          name: expand
          description: expand author and comment object
          schema:
            type: string
            example: 'author'
      responses:
        '200':
          description: 'single quranic_reflects view'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/quranic_reflects'
                      - type: object
                        properties:
                          author:
                            $ref: '#/components/schemas/AuthorDTO'
                      
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/quranic_reflects/1'
                      author:
                        type: string
                        example: '/quranic_reflects/1/author'

        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security: 
        - bearerAuth: []
      tags: [quranic_reflects]
      description: Create or Update entire quranic_reflects
      parameters: 
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
          content:
            'application/json':
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  title:
                    type: string
                    example: quranic_reflects title
                  body:
                    type: string
                    format: text
                    example: quranic_reflects title
                  cover:
                    type: string
                    format: url
                    example: 'https://s3.quranic_reflects.com/22156w34'
                  status:
                    type: string
                    enum: [draft, published]
                    example: draft
                required: [title, body]
      responses:
        '200':
          description: 'successfully Updated'
          content: &quranic_reflects_update_content
            'application/json':
              schema:
                $ref : '#/components/schemas/quranic_reflectsUpdateDTO'
        '201':
          description: 'Successfully Created'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/quranic_reflectsCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security: 
        - bearerAuth: []
      tags: [quranic_reflects]
      description: Selected Update quranic_reflects
      parameters: 
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
          content:
            'application/json':
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: quranic_reflects title
                  body:
                    type: string
                    format: text
                    example: quranic_reflects title
                  cover:
                    type: string
                    format: url
                    example: 'https://s3.quranic_reflects.com/22156w34'
                  status:
                    type: string
                    enum: [draft, published]
                    example: draft
      responses:
        '200':
          description: 'successful Updated'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/quranic_reflectsUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [quranic_reflects]
      description: delete quranic_reflects id
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'quranic_reflects deleted successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    quranic_reflects:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
            authorId:
              type: integer
              format: int32
              example: 1
            postId:
              type: integer
              format: int32
              example: 1
            body : 
              type: string
              format: text
              example: The body of the Quranic_reflect
            status:
              type: string
              enum: [public, private]
              example: public
          required: [id, authorId, quranic_reflectsId, body,status]
        - $ref: '#/components/schemas/Timestamp'
    quranic_reflectsCreateDTO:
     type: object
     properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Quranic_reflects created successfully'
        data:
         $ref: '#/components/schemas/quranic_reflects'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/quranic_reflects/1/'
            author:
              type: string
              format: url
              example: '/quranic_reflects/1/author'
    quranic_reflectsUpdateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: quranic_reflects updated successfully
        data:
          $ref: '#/components/schemas/quranic_reflects'
        links:
          type: object
          properties:
            self:
              type: string
              example: '/quranic_reflects/1'
    mailSchema:
      type: object
      required:
      - from
      - to
      - subject
      - msg
      - attachments
      properties:
        from:
          type: string
          format: email address
          example: emailservice@quranicreflects.com
        to:
          type: string
          format: email address
          example: support@quranicreflects.com
        subject:
          type: string
          format: text
          example: Useful information
        msg:
          type: string
          format: text
          example: Some useful text
        attachments:
          type: object
          format: json
          example: file.json
    Timestamp:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [createdAt, updatedAt]
    AuthorDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: 'Askur'
          required: [id, name]
    Pagination:
      type: object
      properties:
        page:
          type: integer
          format: int32
          example: 10
        limit:
          type: integer
          format: int32
          example: 20
        next:
          type: integer
          format: int32
          example: 30
        prev:
          type: integer
          format: int32
          example: 40
        totalPage:
          type: integer
          format: int32
          example: 50
        totalItems:
          type: integer
          format: int32
          example: 60
      required :
         - page
         - limit
         - totalPage
         - totalItems
  responses:
    "500":
      description: "Internal Server error"
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 500
              error:
                type: string
                example: Internal Server error
              message:
                type: string
                example: we are sorry please try again letter 
    "400":
      description: "Bad Request"
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              error:
                type: string
                example: Bad Request
              data:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: invalid email
                    in:
                      type: string
                      enum: [query, body]
                      example: body
    "401":
      description: "Unauthorized error"
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 401
              error:
                type: string
                example: Unauthorized error
              message:
                type: string
                example: you don't have the right permission 
    "404":
      description: "Resources not found"
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 404
              error:
                type: string
                example: not found
              message:
                type: string
                example: requested not found
  parameters:
    pageParam:
      in: query
      name: page
      description: current page number
      required: true
      schema:
        type: integer
        format: int32
        example: 2
    limitParam:
      in: query
      name: limit
      description: maximum items to be returned
      required: true
      schema:
        type: integer
        format: int32
        example: 10
    sortTypeParam:
      in: query
      name: sort_type
      description: the type of sort ( asc or dsc )
      schema:
        type: string
        enum: [asc, dsc]
        example: dsc
    sortByParam:
      in: query
      name: sort_by
      description: sort key
      schema:
        type: string
        example: updatedAt
    searchParam:
      in: query
      name: search
      description: search term
      schema:
        type: string
        example: title
    idPathParam:
      in: path
      name: id
      required: true
      description: Quranic_reflects ID
      schema:
        type: string
        example: '2gdrishdkfnn2'
    